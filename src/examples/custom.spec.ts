import { describe, expect, test } from 'vitest';
import { CustomIsoDefinition } from './custom';

describe('Custom Format with Packed Data', () => {
  [
    '0100f620440004e1a000000000420000000010f5f1f7f0f0f3a585a883d885f8f9f0f901000000000000010000000000010002231137454249893250010181d6d883d599d3a3f191d3c591a7f1e998f9c4f182a5c1a7e7d9f382a9c2e3848883a7e798e6a240404040404040404040404040f697d4c9f699c5a3e2a84040404040e4e20c03020206020011020112010009780978000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    '0100763e44810ee5a80110f5f1f7f0f0f3d3d5838198d8f7f2f5f70000000000000074000000000074000304124515000213134507030425110304594404000006013239f2f8f9f5f3f3f9f0f7f6f7f6f3f0f8f6f8f1f0f0f1f1f0f8f1f1f0f0f0f4f0f0f7f7f3f040404040404040c2e3848883a7e798e6a240404040404040404040404040f697d4c9f699c5a3e2a84040404040e4e200230116020c0501100302730704251212105167975799925640020307020103041502f0f52801020102040250030201040202060200070201080c00000000000011020012020014040103220207097809780a01000000000000000000ffffffffffffffff',
    '0100763e46810ee1aa0110f5f4f7f3f9f5a5e8d793a8d6f9f5f0f200000000000001323400000001323403041244069130021343560304260103045231030100000006012653f0f3f0f4f1f6f9f1f3f0f0f2f4f1f8f4f3f9f0f0d4f1f1f7f8f8f1f2f2f9f0f2f5f1f94040404040404040c2e3848883a7e798e6a240404040404040404040404040f697d4c9f699c5a3e2a84040404040e4e22401020102040250030201040202060200070201080c000000000000110200120200220207097809780a01000000000000000000080095050000008000ffffffffffffffff',
    '0100763e44810ee5a80110f5f1f7f0f0f3c3c1e5a9d7c3f7f8f6f30000000000000120280000000120280304124355042787134353030425120304565104000006012916f0f3f0f4f0f0f0f4f2f7f8f7f8f9f1f7f1f5f0f0f0f0f0f0f0f0f0f1f0f5f6f5f6f2f7f040404040404040c2e3848883a7e798e6a240404040404040404040404040f697d4c9f699c5a3e2a84040404040e4e200230116020c0501208346930704260212105167975799962155020307020203041502f0f12b01020102040250030201040202060200070201080c00000000000011020012020013022114040216220207097809780a01000000000000000000ffffffffffffffff',
    '0100763e46810ee1aa0110f5f4f7f3f9f5a2a8d191e891f2f8f2f100000000000000987200000000987203041243442238071243330304251203045310030100000006013445f3f0f6f3f1f2f2f2f3f8f0f7f7f7f1f6f3f0f0f0f0f4f1f3f4f9f0f9f5f2f6f5f6f7f0f0f2f3f5f0f8f5f3c2e3848883a7e798e6a240404040404040404040404040f697d4c9f699c5a3e2a84040404040e4e22401020102040250030201040202060200070201080c000000000000110200120200220207097809780a01000000000000000000080095050000008000ffffffffffffffff',
  ].map((rawHex) => {
    test('parsing and preparing should also work using object call', () => {
      const buffer = Buffer.from(rawHex, 'hex');

      const message = CustomIsoDefinition.parse(buffer);
      const result = CustomIsoDefinition.prepare(message);
      expect(result).toEqual(buffer);
    });
  });
});
